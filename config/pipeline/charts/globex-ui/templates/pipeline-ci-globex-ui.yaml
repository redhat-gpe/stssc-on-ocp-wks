apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: app-globex-ui-pipeline
spec:
  params:
  - name: REPO_HOST
    type: string
  - name: COMMIT_SHA
    type: string
  - name: TLSVERIFY
    type: string
  - name: BUILD_EXTRA_ARGS
    type: string
  - name: IMAGE_REPO
    type: string
  - name: IMAGE_TAG
    type: string
  - name: MANIFEST_FILE
    type: string
  - name: MANIFEST_REPO
    type: string
  - name: MANIFEST_REPO_NAME
    type: string
  - name: GIT_REF
    type: string
  - name: COMMIT_DATE
    type: string
  - name: COMMIT_AUTHOR
    type: string
  - name: COMMIT_MESSAGE
    type: string
  - name: GIT_REPO
    type: string
  - name: SONARQUBE_HOST_URL
    type: string
  - name: SONARQUBE_PROJECT_KEY
    type: string
  - name: SONARQUBE_PROJECT_SECRET
    type: string
  - name: CYCLONEDX_HOST_URL
    type: string
  tasks:
  - name: fetch-source
    params:
    - name: url
      value: $(params.GIT_REPO)
    - name: revision
      value: $(params.GIT_REF)
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
  - name: scan-source
    params:
    - name: sonarqubeHostUrl
      value: $(params.SONARQUBE_HOST_URL)
    - name: sonarqubeProjectKey
      value: $(params.SONARQUBE_PROJECT_KEY)
    - name: sonarqubeProjectSecret
      value: $(params.SONARQUBE_PROJECT_SECRET)
    runAfter:
    - fetch-source
    taskRef:
      kind: Task
      name: scan-code
    workspaces:
    - name: repository
      workspace: shared-data
  - name: verify-source
    runAfter:
    - fetch-source
    taskRef:
      kind: Task
      name: verify-source-code
    workspaces:
    - name: repository
      workspace: shared-data
    - name: secrets
      workspace: secrets
  - name: build-image
    retries: 1
    params:
    - name: TLSVERIFY
      value: $(params.TLSVERIFY)
    - name: BUILD_EXTRA_ARGS
      value: --label=io.openshift.build.commit.author='$(params.COMMIT_AUTHOR)' --label=io.openshift.build.commit.date='$(params.COMMIT_DATE)'
        --label=io.openshift.build.commit.id='$(params.COMMIT_SHA)' --label=io.openshift.build.commit.message='$(params.COMMIT_MESSAGE)'
        --label=io.openshift.build.commit.ref='$(params.GIT_REF)' --ulimit=nofile=4096:4096
    - name: IMAGE
      value: $(params.IMAGE_REPO):$(params.IMAGE_TAG)
    runAfter:
    - scan-source
    - verify-source
    taskRef:
      kind: ClusterTask
      name: buildah
    workspaces:
    - name: source
      workspace: shared-data
  - name: acs-image-check
    params:
    - name: rox_central_endpoint
      value: stackrox-endpoint
    - name: rox_api_token
      value: stackrox-secret
    - name: image
      value: $(params.IMAGE_REPO):$(params.IMAGE_TAG)
    - name: insecure-skip-tls-verify
      value: "true"
    runAfter:
    - build-image
    taskRef:
      kind: Task
      name: acs-image-check
  - name: acs-image-scan
    params:
    - name: rox_central_endpoint
      value: stackrox-endpoint
    - name: rox_api_token
      value: stackrox-secret
    - name: image
      value: $(params.IMAGE_REPO):$(params.IMAGE_TAG)
    - name: insecure-skip-tls-verify
      value: "true"
    runAfter:
    - build-image
    taskRef:
      kind: Task
      name: acs-image-scan
  - name: generate-sbom
    params:
    - name: cyclonedxHostUrl
      value: $(params.CYCLONEDX_HOST_URL)
    runAfter:
    - build-image
    taskRef:
      kind: Task
      name: generate-sbom
    workspaces:
    - name: repository
      workspace: shared-data
  - name: acs-deploy-check
    params:
      - name: rox_central_endpoint
        value: stackrox-endpoint
      - name: rox_api_token
        value: stackrox-secret
      - name: gitRepositoryUrl
        value: $(params.MANIFEST_REPO)
      - name: gitRepositoryRevision
        value: main
      - name: insecure-skip-tls-verify
        value: 'true'
    runAfter:
    - acs-image-check
    - acs-image-scan
    - generate-sbom
    taskRef:
      kind: Task
      name: acs-deploy-check
  - name: update-dev-manifest
    params:
    - name: image
      value: $(params.IMAGE_REPO):$(params.IMAGE_TAG)
    - name: configuration_file
      value: $(params.MANIFEST_FILE)
    - name: repository
      value: $(params.MANIFEST_REPO)
    - name: git_user_name
      value: $(params.COMMIT_AUTHOR)
    runAfter:
    runAfter:
    - acs-deploy-check
    taskRef:
      kind: Task
      name: update-manifest
  workspaces:
  - name: shared-data
  - name: maven-settings
  - name: signature
  - name: secrets
